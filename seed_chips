#!/bin/ksh

if [[ ${VERBOSE} = "TRUE" ]]; then
  set -o xtrace
fi

# default config directory is the current directory
# if not specified
typeset -r CUST_DIR=${1:-${PWD}}
typeset -r CONFIG_DIR=${CUST_DIR}/config
typeset -r CONFIG_DB_DATA=${CONFIG_DIR}/db/data
typeset -r CONFIG_DB_INIT=${CONFIG_DIR}/db/init
typeset -r CONFIG_GUAC_EXT=${CONFIG_DIR}/extensions
typeset -r ARTIFACTS=${CUST_DIR}/artifacts

typeset -r GUAC_VERSION="1.5.5"
typeset -r IMG_MARIADB="mariadb:lts"
typeset -r IMG_GUACD="guacamole/guacd:${GUAC_VERSION}"
typeset -r IMG_GUAC="guacamole/guacamole:${GUAC_VERSION}"

rm -rf $CONFIG_DIR

# container names
typeset -r POD="chips-pod"
typeset -r CON_DB="chips-database"
typeset -r CON_GUACD="chips-server"
typeset -r CON_GUAC="chips-client"

typeset -r POD_HOSTNAME="localhost"

# environment files
typeset -r ENV_DB="${CONFIG_DIR}/${CON_DB}.env"
typeset -r ENV_GUAC="${CONFIG_DIR}/${CON_GUAC}.env"

typeset -r CON_TEMP_GUAC_HOME="/usr/local/src"
typeset -r CONFIG_GUAC_HOME="${ARTIFACTS}/guac_home"

# ports
typeset -r CON_GUACD_PORT=4822
typeset -r CON_GUAC_PORT=8080
typeset -r CON_DB_PORT=3306

typeset -r GUACD_PORT=4822
typeset -r GUAC_PORT=8080
typeset -r DB_PORT=3306

typeset -r DB_NAME=guac_db
typeset -r DB_USER=guac_adm
typeset -r DB_USER_PASSWORD=ers005sdguac
typeset -r DB_ROOT_PASSWORD=ers005rtguac


# create directory structure for configurations
if [[ ! -d ${CONFIG_DB_DATA} ]]; then
  mkdir -p ${CONFIG_DB_DATA}
  chown root:root ${CONFIG_DB_DATA}
fi

if [[ ! -d ${CONFIG_DB_INIT} ]]; then
  mkdir -p ${CONFIG_DB_INIT}
  chmod 755 ${CONFIG_DB_INIT}
fi

# create environment files for containers
cat >$ENV_DB <<EOF
MARIADB_DATABASE=${DB_NAME}
MARIADB_USER=${DB_USER}
MARIADB_PASSWORD=${DB_USER_PASSWORD}
MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
EOF

chown root:root $ENV_DB
chmod 600 $ENV_DB

cat >$ENV_GUAC <<EOF
MYSQL_DATABASE=${DB_NAME}
MYSQL_USER=${DB_USER}
MYSQL_PASSWORD=${DB_USER_PASSWORD}
GUACD_HOSTNAME=${POD_HOSTNAME}
MYSQL_HOSTNAME=${POD_HOSTNAME}
MYSQL_PORT=${CON_DB_PORT}
GUACAMOLE_HOME=${CON_TEMP_GUAC_HOME}
EOF

chown root:root $ENV_GUAC
chmod 600 $ENV_GUAC

# extract seed sql scripts
typeset -r GUAC_AUTH_JDBC_FILE=guacamole-auth-jdbc
typeset -r GUAC_AUTH_JDBC_TAR=${ARTIFACTS}/${GUAC_AUTH_JDBC_FILE}-${GUAC_VERSION}.tar.gz

if [[ -s ${GUAC_AUTH_JDBC_TAR} ]]; then
  tar -xvf ${GUAC_AUTH_JDBC_TAR} \
    ${GUAC_AUTH_JDBC_FILE}-${GUAC_VERSION}/mysql/schema/*.sql \
    --strip-component 3 \
    -C ${CUST_DIR}
fi

cat > ${CONFIG_DB_INIT}/000-init.sql <<EOF
CREATE DATABASE IF NOT EXISTS ${DB_NAME};

GRANT create,select,insert,update,delete ON ${DB_NAME}.* TO '${DB_USER}'@'%';

FLUSH privileges;

USE guac_db;

$(cat 001-*.sql)
$(cat 002-*.sql)

EOF

rm -rf ${CUST_DIR}/*.sql ${CUST_DIR}/upgrade

# cleanup containers before starting
podman container rm ${CON_DB} ${CON_GUACD} ${CON_GUAC} --force
podman pod rm ${POD} --force
podman volume prune --force

#podman pod exists ${POD}
#
#if [[ ! $? -eq 0 ]]; then
#  podman pod create \
#    --name ${POD} \
#    --publish-all \
#    --hostname=${POD_HOSTNAME}
#
#    #--publish ${GUAC_PORT}:${CON_GUAC_PORT}\
#    #--publish ${DB_PORT}:${CON_DB_PORT} \
#fi

podman run --replace \
	--publish-all \
	--network=host \
  --detach \
  --env-file=${ENV_DB} \
  -v ${CONFIG_DB_INIT}:/docker-entrypoint-initdb.d:Z \
  --name ${CON_DB} ${IMG_MARIADB}
  #--pod ${POD} \

podman run --replace \
	--publish-all \
	--network=host \
  --detach \
  --name ${CON_GUACD} ${IMG_GUACD}
  #--pod ${POD} \

podman run --replace \
	--publish-all \
	--network=host \
  --detach \
  --env-file=${ENV_GUAC} \
  -v ${CONFIG_GUAC_HOME}:${CON_TEMP_GUAC_HOME}:Z \
  --name ${CON_GUAC} ${IMG_GUAC}
  #--pod ${POD} \


